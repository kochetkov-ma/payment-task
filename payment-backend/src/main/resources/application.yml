server:
  port: 8080

spring:
  application:
    name: payment-backend

  datasource:
    url: jdbc:postgresql://postgres:5432/payment_db
    username: payment_user
    password: payment_password
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true

  kafka:
    bootstrap-servers: kafka:29092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      group-id: payment-backend-group
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"
        spring.json.type.mapping: "com.payment.balance.dto.kafka.HoldResponse:com.payment.backend.dto.kafka.HoldResponse"
        spring.json.use.type.headers: false

logging:
  level:
    com.payment.backend: INFO
    org.springframework.security: DEBUG

jwt:
  secret: "mySecretKey123456789012345678901234567890"
  expiration: 86400000 # 24 hours in milliseconds

---
spring:
  config:
    activate:
      on-profile: docker
  datasource:
    url: jdbc:postgresql://postgres:5432/payment_db
    username: payment_user
    password: payment_password
  kafka:
    bootstrap-servers: kafka:29092

kafka:
  topic:
    payment-hold-request: payment-hold-request
    payment-hold-response: payment-hold-response

logging:
  level:
    root: INFO
    com.payment: DEBUG